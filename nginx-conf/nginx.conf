# Rate Limiting
limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;
limit_req_status 429;

# Denying Connections
limit_conn_zone $binary_remote_addr zone=limitconnbyaddr:20m;


server {
        listen 80;
        server_name gracious-kare.cloud www.gracious-kare.cloud;        #Redirecting HTTP request to HTTPS
        return 301 https://$host$request_uri;
}

server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name gracious-kare.cloud www.gracious-kare.cloud;

        ssl_certificate /ssl/origin.pem;
        ssl_certificate_key /ssl/privateCF.pem;

        location / {
    limit_req zone=mylimit burst=10 delay=10;                                              #Rate limiting
    proxy_pass http://frontend:3000;
    # Security Headers
    proxy_hide_header X-Powered-By;
    proxy_hide_header Access-Control-Allow-Headers;
    proxy_hide_header Access-Control-Allow-Methods;
    proxy_hide_header Access-Control-Allow-Origin;
    add_header Cache-Control "private, max-age=0";
    add_header X-Content-Type-Options "nosniff";
    add_header X-Frame-Options "DENY";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    add_header X-XSS-Protection "1; mode=block";
  }
  
  location /be/ {
    # This section handles requests to the backend.
    proxy_redirect http:// https://;
    limit_req zone=mylimit burst=10 delay=10;                                          #Rate limiting
    proxy_pass http://backend:3001/;
    proxy_set_header Host $host:$server_port;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_hide_header Access-Control-Allow-Headers;
    proxy_hide_header Access-Control-Allow-Methods;
    proxy_hide_header Access-Control-Allow-Origin;
    
    # Prevent directory browsing
    alias /be/;
    autoindex off;

    # Additional headers for CORS support
    add_header 'Access-Control-Allow-Origin' 'https://gracious-kare.cloud' always; # Change this to * if you want to allow all origins to access your backend locally
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;

    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://gracious-kare.cloud' always; # Change this to * if you want to allow all origins to access your backend locally
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Content-Length' 0;
        add_header 'Content-Type' 'text/plain' always;
        return 204;
    }
  }
   
    limit_conn limitconnbyaddr 50;
}

upstream jenkins {
  server jenkins:8080 fail_timeout=0;
}

server {
  listen 443 ssl;
  server_name jenkins.gracious-kare.cloud www.jenkins.gracious-kare.cloud;

  ssl_certificate /ssl/origin.pem;
  ssl_certificate_key /ssl/privateCF.pem;

  location / {
    proxy_set_header        Host $host:$server_port;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;
    proxy_redirect          http:// https://;
    proxy_pass              http://jenkins;
    # Required for new HTTP-based CLI
    proxy_http_version 1.1;
    proxy_request_buffering off;
    proxy_buffering off; # Required for HTTP-based CLI to work over SSL
    # workaround for https://issues.jenkins-ci.org/browse/JENKINS-45651
    add_header 'X-SSH-Endpoint' 'jenkins.gracious-kare.cloud:50022' always;
  }
}

# this is required to proxy Grafana Live WebSocket connections.
map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

upstream grafana {
  server grafana:3000;
}

server {
  listen 443 ssl;
  server_name grafana.gracious-kare.cloud www.grafana.gracious-kare.cloud;

  ssl_certificate /ssl/origin.pem;
  ssl_certificate_key /ssl/privateCF.pem;

  location / {
    proxy_set_header Host $http_host;
    proxy_pass http://grafana;
  }

  # Proxy Grafana Live WebSocket connections.
  location /grafana/api/live/ {
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $http_host;
    proxy_pass http://grafana;
  }
}
