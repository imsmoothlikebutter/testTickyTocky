version: "3.9" # Use the desired version of Docker Compose

services:
  frontend:
    container_name: frontend
    image: ict3103-tickytocky-frontend:latest
    build:  
      context: ./client # Specify the directory containing your React frontend application
      dockerfile: Dockerfile-client 
    ports:
      - "3000:3000"  # Map host port 3000 to container port 3000
    labels: #Send Logs to promtail grafana
      logging: "promtail" 
      logging_jobname: "containerlogs"
    environment:
      - TZ=Asia/Singapore #Timezone for loggings
    networks:
      - app-network

  backend:
    container_name: backend
    image: ict3103-tickytocky-backend:latest
    build:
      context: ./server # Specify the directory containing your Node.js backend application
      dockerfile: Dockerfile-server 
    ports:
      - "3001:3001" # Map host port 3001 to container port 3001
    labels: #Send Logs to promtail grafana
      logging: "promtail" 
      logging_jobname: "containerlogs"
    environment:
      - TZ=Asia/Singapore #Timezone for loggings
    networks:
      - app-network

  nginx:
    image: nginx:mainline-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    labels: #Send Logs to promtail grafana
      logging: "promtail" 
      logging_jobname: "containerlogs"
    environment:
      - TZ=Asia/Singapore #Timezone for loggings
    volumes:
      - ./nginx-conf:/etc/nginx/conf.d #Nginx configuration file
      - ./gracious-kare.cloud-ssl-bundle:/ssl/ #SSL certs directory
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
      
  jenkins:
    image: ict3103-tickytocky-jenkins:latest
    container_name: jenkins
    build:
      context: ./jenkins_conf
      dockerfile: Dockerfile-jenkins 
    privileged: true
    user: root
    ports:
      - "8443:8080"  # Map port 8080 on your host to port 8080 in the container
      - "50000:50000"
    labels: #Send Logs to promtail grafana
      logging: "promtail" 
      logging_jobname: "containerlogs"
    environment:
      - TZ=Asia/Singapore #Timezone for loggings
    volumes:
      - ./jenkins_home:/var/jenkins_home  # Persist Jenkins data
      - /var/run/docker.sock:/var/run/docker.sock  # Mount the Docker socket
      - ./gracious-kare.cloud-ssl-bundle:/ssl/ #SSL certs directory
      #- ./:/repo
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 2G
    networks:
      - app-network

  loki:
    container_name: loki
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    labels: #Send Logs to promtail grafana
      logging: "promtail" 
      logging_jobname: "containerlogs"
    environment:
      - TZ=Asia/Singapore #Timezone for loggings
    volumes:
      - ./loki:/etc/loki
    command: -config.file=/etc/loki/loki-config.yml
    networks:
      - app-network

  promtail:
    container_name: promtail
    image: grafana/promtail:2.9.0
    volumes:
      - /var/log:/var/log
      - ./promtail:/etc/promtail
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    labels: #Send Logs to promtail grafana
      logging: "promtail" 
      logging_jobname: "containerlogs"
    environment:
      - TZ=Asia/Singapore #Timezone for loggings
    command: -config.file=/etc/promtail/promtail-config.yml
    networks:
      - app-network

  grafana:
    container_name: grafana
    user: root
    volumes:
      - ./grafana:/var/lib/grafana
    image: grafana/grafana:latest
    ports:
      - "3200:3000"
    labels: #Send Logs to promtail grafana
      logging: "promtail" 
      logging_jobname: "containerlogs"
    environment:
      - TZ=Asia/Singapore #Timezone for loggings
    networks:
      - app-network
    depends_on:
      - loki

networks:
  app-network:
    driver: bridge
    name: ict3103-tickytocky
    external: true
